ArrayStack
*** Creating a stack with default constructor ***
---> The stack capacity is set by the constructor to: 50
---> The topIndex is: 50

---> isEmpty() returns true
CORRECT - the top index is set to 50

---> Adding to stack to get: Joe Jane Jill Jess Jim
---> Done adding 5 elements; the topIndex is: 45
---> isEmpty() returns false

--> Testing peek and pop:
Joe is at the top of the stack.
Joe is removed from the stack.
Jane is at the top of the stack.
Jane is removed from the stack.
Jill is at the top of the stack.
Jill is removed from the stack.
Jess is at the top of the stack.
Jess is removed from the stack.
Jim is at the top of the stack.
Jim is removed from the stack.
--> The stack should be empty: 
isEmpty() returns true

--> Adding to stack to get: Jim Jess Joe
---> Done adding 3 elements; the topIndex is: 47

--> Testing clear:
--> The stack should be empty: 
isEmpty() returns true
defaultStack.peek() returns: 
 CORRECT - exception has been thrown: peek operation failed
defaultStack.pop() returns: 
 CORRECT - exception has been thrown: pop operation failed


*** Creating a stack with the secondary constructor ***
---> The stack capacity is set by the constructor to: 3
---> The topIndex is: 3

--> isEmpty() returns true

--> Adding to stack to get: Joe Jane Jill Jess Jim
-----> The stack capacity has been doubled and it is now: 6; with topIndex = 3
---> Done adding 5 elements; the topIndex is: 1
--> isEmpty() returns false

-->Testing peek and pop:
Joe is at the top of the stack.
Joe is removed from the stack.
Jane is at the top of the stack.
Jane is removed from the stack.
Jill is at the top of the stack.
Jill is removed from the stack.
Jess is at the top of the stack.
Jess is removed from the stack.
Jim is at the top of the stack.
Jim is removed from the stack.
--> The stack should be empty: 
isEmpty() returns true
CORRECT - the top index is set to 6

--> Adding to stack to get: Jim Jess Joe
---> Done adding 3 elements; the topIndex is: 3

--> Testing clear:
--> The stack should be empty: 
isEmpty() returns true
smallStack.peek() returns: 
 CORRECT - exception has been thrown: peek operation failed
smallStack.pop() returns: 
 CORRECT - exception has been thrown: pop operation failed
*** Done ***

Process finished with exit code 0
